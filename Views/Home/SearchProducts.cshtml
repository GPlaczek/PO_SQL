@using System.Data.SQLite
@using PO_SQL.Models.ActionClasses
@{
    ViewData["Title"] = "Przeszukaj produkty";
    IAction a1 = new ListTables();
    var tables = a1.Execute();
}
@using (Html.BeginForm("SearchResults", "Results"))
{
<div class="text-center">
    <h1 class="display-4">Przeszukaj produkty</h1><br />

    <style>
        charset "UTF-8";
        * {
            box-sizing: border-box;
        }

        .dropdown {
            margin: 0 auto;
            text-align: left;
            width: 210px;
            font-size: 14px;
            justify-content: left;
            color: #333;
        }

            .dropdown .dropdown-list {
                padding: 12px;
                background: #fff;
                position: absolute;
                top: 30px;
                left: 2px;
                right: 2px;
                box-shadow: 0 1px 2px 1px rgba(0, 0, 0, 0.15);
                transform-origin: 50% 0;
                transform: scale(1, 0);
                transition: transform 0.15s ease-in-out 0.15s;
                max-height: 66vh;
                overflow-y: scroll;
            }

            .dropdown .dropdown-option {
                display: block;
                padding: 8px 12px;
                opacity: 0;
                transition: opacity 0.15s ease-in-out;
            }

            .dropdown .dropdown-label {
                display: block;
                height: 30px;
                background: #fff;
                border: 1px solid #ccc;
                padding: 6px 12px;
                line-height: 1;
                cursor: pointer;
            }

                .dropdown .dropdown-label:before {
                    content: "▼";
                    float: right;
                }

            .dropdown.on .dropdown-list {
                transform: scale(1, 1);
                transition-delay: 0s;
            }

                .dropdown.on .dropdown-list .dropdown-option {
                    opacity: 1;
                    transition-delay: 0.2s;
                }

            .dropdown.on .dropdown-label:before {
                content: "▲";
            }

            .dropdown [type=checkbox] {
                top: -1px;
                margin-right: 4px;
            }
    </style>

    <div class="dropdown" data-control="checkbox-dropdown">
        <label class="dropdown-label">Select</label>

        <div class="dropdown-list">
            <a href="#" data-toggle="check-all" class="dropdown-option">
                Check All
            </a>
            @for (int i = 0; tables.Read(); i++)
            {
                <label class="dropdown-option">
                    <input type="checkbox" name="Table[]" value="@tables.GetString(0)" />
                    @tables.GetString(0)
                </label>
            }
        </div>
    </div>
    <br />
    <input type="text" placeholder="Nazwa" name="productName" /><br /><br />
    <input type="text" placeholder="Fragment opisu" name="productDescription" /><br /><br />
    Cena: od
    <input type="text" name="priceMin" style="width:60px" />
    do
    <input type="text" name="priceMax" style="width:60px" /><br /><br />
    <input type="submit" name="Submit" disabled value="Wyszukaj"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
    <script src="https://cpwebassets.codepen.io/assets/common/stopExecutionOnTimeout-1b93190375e9ccc259df3a57c1abc0e64599724ae30d7ea4c6877eb615f89387.js"></script>
    <script id="rendered-js">
        (function ($) {
            var CheckboxDropdown = function (el) {
                var _this = this;
                this.isOpen = false;
                this.areAllChecked = false;
                this.$el = $(el);
                this.$label = this.$el.find('.dropdown-label');
                this.$checkAll = this.$el.find('[data-toggle="check-all"]').first();
                this.$inputs = this.$el.find('[type="checkbox"]');

                this.onCheckBox();

                this.$label.on('click', function (e) {
                    e.preventDefault();
                    _this.toggleOpen();
                });

                this.$checkAll.on('click', function (e) {
                    e.preventDefault();
                    _this.onCheckAll();
                });

                this.$inputs.on('change', function (e) {
                    _this.onCheckBox();
                });
            };

            CheckboxDropdown.prototype.onCheckBox = function () {
                this.updateStatus();
            };

            CheckboxDropdown.prototype.updateStatus = function () {
                var checked = this.$el.find(':checked');

                this.areAllChecked = false;
                this.$checkAll.html('Zaznacz Wszystko');

                if (checked.length <= 0) {
                    this.$label.html('Wybierz Sklep');
                    $('input[name="Submit"]').attr('disabled', 'disabled');
                    console.log($('input[name="Submit"]').disabled);
                } else {
                    $('input[name="Submit"]').removeAttr('disabled');
                    console.log($('input[name="Submit"]').disabled);
                    if (checked.length === 1) {
                        this.$label.html(checked.parent('label').text());
                    } else
                        if (checked.length === this.$inputs.length) {
                            this.$label.html('Wszystko Zaznaczone');
                            this.areAllChecked = true;
                            this.$checkAll.html('Odznacz Wszystko');
                        } else {
                            this.$label.html(checked.length + ' Selected');
                        }
                }
            };

            CheckboxDropdown.prototype.onCheckAll = function (checkAll) {
                if (!this.areAllChecked || checkAll) {
                    this.areAllChecked = true;
                    this.$checkAll.html('Odznacz Wszystko');
                    this.$inputs.prop('checked', true);
                } else {
                    this.areAllChecked = false;
                    this.$checkAll.html('Zaznacz wszystko');
                    this.$inputs.prop('checked', false);
                }

                this.updateStatus();
            };

            CheckboxDropdown.prototype.toggleOpen = function (forceOpen) {
                var _this = this;

                if (!this.isOpen || forceOpen) {
                    this.isOpen = true;
                    this.$el.addClass('on');
                    $(document).on('click', function (e) {
                        if (!$(e.target).closest('[data-control]').length) {
                            _this.toggleOpen();
                        }
                    });
                } else {
                    this.isOpen = false;
                    this.$el.removeClass('on');
                    $(document).off('click');
                }
            };

            var checkboxesDropdowns = document.querySelectorAll('[data-control="checkbox-dropdown"]');
            for (var i = 0, length = checkboxesDropdowns.length; i < length; i++) {
                if (window.CP.shouldStopExecution(0)) break;
                new CheckboxDropdown(checkboxesDropdowns[i]);
            } window.CP.exitedLoop(0);
        })(jQuery);
    </script>
    <script>
        let checked = document
        
    </script>
</div>}